buildscript {
    repositories {
        maven { url "http://repo.spring.io/libs-snapshot" }
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.0.2.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

sourceCompatibility = 1.6
version = '1.0'

loadConfiguration()

def loadConfiguration() {
	def environment = hasProperty( 'env' ) ? env : 'dev'
	setProperty 'environment', environment
    if( environment.equals( 'sit' ))
	sourceSets.main.resources.srcDirs = ['src/main/resources/sit']
	else if(environment.equals( 'product' ))
	sourceSets.main.resources.srcDirs = ['src/main/resources/product']
	else if(environment.equals( 'kjproduct' ))
	sourceSets.main.resources.srcDirs = ['src/main/resources/kjproduct']
	else
	sourceSets.main.resources.srcDirs = ['src/main/resources/dev']
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Backend', 'Implementation-Version': version
    }
    archiveName = "bakendtasks-$version-$environment.$extension"
}

configurations{
	mainClassName = "tv.joyplus.backend.task.hive.BackendJobRun"
}

repositories {
    mavenCentral()
    maven {
        url 'http://repo.spring.io/milestone'
        url 'https://repository.cloudera.com/artifactory/cloudera-repos'
    }
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'org.springframework:spring-orm:4.0.3.RELEASE'
    compile 'org.springframework:spring-context:4.0.3.RELEASE'
    compile 'org.hibernate:hibernate-core:4.3.6.Final'
    compile 'mysql:mysql-connector-java:5.1.30'
    compile 'log4j:log4j:1.2.17'
    compile "org.apache.httpcomponents:httpclient:4.2.2"
    compile "org.apache.hive:hive-jdbc:0.12.0-cdh5.1.0"
    compile "org.apache.hive:hive-shims:0.12.0"
    compile 'org.apache.hadoop:hadoop-core:1.2.1'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
