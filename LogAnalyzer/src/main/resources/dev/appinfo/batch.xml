<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.1.xsd 
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd">
    <import resource="classpath:ApplicationContext.xml"/>
    <context:property-placeholder location="classpath:appinfo/appinfo.properties"
                                  order="1" ignore-unresolvable="true"/>
    <context:annotation-config/>

    <job id="appLogLoadJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="appLogLoadStep">
            <tasklet ref="appLogLoadTask"/>
        </step>
    </job>

    <bean id="appLogLoadTask" class="tv.joyplus.backend.appinfo.core.AppLogLoadTasklet" scope="step">
        <property name="time" value="#{jobParameters['time']}"/>
        <property name="businessIds" value="${business.id}"/>
    </bean>

    <job id="appLogDownloadJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="appDownlogLoadStep">
            <tasklet ref="appLogDownloadTask"/>
        </step>
    </job>
    <bean id="appLogDownloadTask" class="tv.joyplus.backend.appinfo.core.AppLogDownloadTasklet" scope="step">
        <property name="unzipPassword" value="${zip.password}"/>
    </bean>
    <!-- add by Jas for MutliThread analyze -->
    <bean id="appLogMutliThreadAnalyzeTask" class="tv.joyplus.backend.appinfo.core.AppLogMutliThreadAnalyzeTasklet" scope="step">
        <property name="job" ref="appLogAnalyzeJob"/>
        <property name="jobLauncher" ref="jobLauncher"/>
    </bean>
    <job id="appLogMutliThreadAnalyzeJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="appLogMutliThreadAnalyzeStep">
            <tasklet ref="appLogMutliThreadAnalyzeTask"/>
        </step>
    </job>
    <!-- end add by Jas -->
    <job id="appLogAnalyzeJob" xmlns="http://www.springframework.org/schema/batch">
        <step id="appLogAnalyzeStep">
            <tasklet>
                <chunk reader="appLogItemReader" processor="appLogItemProcessor"
                       writer="appLogItemWriter" commit-interval="${commit.num}"/>
            </tasklet>
        </step>
    </job>

    <bean id="appLogItemReader" class="org.springframework.batch.item.file.MultiResourceItemReader"
          scope="step">
        <property name="resources" value="file:#{jobParameters['path']}/*.log"/>
        <property name="delegate" ref="flatFileItemReader"/>
    </bean>
    <bean id="flatFileItemReader"
          class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="lineMapper">
            <bean
                    class="org.springframework.batch.item.file.mapping.PassThroughLineMapper"/>
        </property>
    </bean>
    <bean id="appLogItemProcessor" class="tv.joyplus.backend.appinfo.core.AppLogItemProcessor"
          scope="step">
        <property name="path" value="#{jobParameters['path']}"/>
        <property name="businessId" value="#{jobParameters['business.id']}"/>
        <property name="tabName" value="#{jobParameters['tabName']}"/>
    </bean>
    <bean id="appLogItemWriter" class="tv.joyplus.backend.appinfo.core.AppLogItemWriter"
          scope="step">
    </bean>

    <bean id="qiniu" class="tv.joyplus.backend.qiniu.QiniuManager"/>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean class="tv.joyplus.backend.appinfo.dao.impl.AppLogDownloadDaoImpl">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
    </bean>
    <bean class="tv.joyplus.backend.appinfo.dao.impl.AppLogAnalyzeDaoImpl">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
    </bean>
    <bean class="tv.joyplus.backend.appinfo.dao.impl.AppLogDaoImpl">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
    </bean>
    <bean class="tv.joyplus.backend.appinfo.dao.impl.AppLogProcessDaoImpl">
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
    </bean>

    <bean id="configManager" class="tv.joyplus.backend.config.ConfigManagerImpl">
        <property name="businessIds" value="${business.id}"/>
        <property name="dataSource">
            <ref local="dataSource"/>
        </property>
    </bean>

    <bean id="appLogAnalyzeJobLauncher" class="tv.joyplus.backend.appinfo.AppLogAnalyzeLauncher">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="jobLauncher" ref="jobLauncher"/>
        <property name="job" ref="appLogAnalyzeJob"/>
        <property name="mutliThreadjob" ref="appLogMutliThreadAnalyzeJob"/>
    </bean>

    <bean id="appLogAnalyzeJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="appLogAnalyzeJobLauncher"/>
        <property name="targetMethod" value="execute"/>
    </bean>

    <bean id="cronTriggerAppLogAnalyze" lazy-init="false"
          class="tv.joyplus.backend.appinfo.AppLogAnalyzeLauncherWapper">
        <property name="jobDetail" ref="appLogAnalyzeJobDetail"/>
        <property name="businessIds" value="${business.id}"/>
    </bean>


    <bean id="appLogLoadJobLauncher" class="tv.joyplus.backend.appinfo.AppLogLoadLauncher">
        <property name="jobRepository" ref="jobRepository"/>
        <property name="jobLauncher" ref="jobLauncher"/>
        <property name="job" ref="appLogLoadJob"/>
    </bean>

    <bean id="appLogLoadJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="appLogLoadJobLauncher"/>
        <property name="targetMethod" value="execute"/>
    </bean>

    <bean id="cronTriggerAppLogLoad" lazy-init="false"
          class="tv.joyplus.backend.appinfo.AppLogLoadLauncherWapper">
        <property name="jobDetail" ref="appLogLoadJobDetail"/>
        <property name="businessIds" value="${business.id}"/>
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTriggerAppLogLoad"/>
                <ref bean="cronTriggerAppLogAnalyze"/>
            </list>
        </property>
    </bean>

</beans>
